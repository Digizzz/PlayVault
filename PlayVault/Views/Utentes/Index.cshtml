@model IEnumerable<PlayVault.Models.Utente>
@{
    ViewData["Title"] = "Gestione Utenti - PlayVault";
}

    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-6 text-primary mb-2">
                        <i class="fas fa-users me-3"></i>Gestione Utenti
                    </h1>
                    <p class="text-muted">Visualizza e gestisci tutti gli utenti registrati su PlayVault</p>
                </div>
                <div>
                    <a asp-action="Create" class="btn btn-primary btn-lg shadow-sm">
                        <i class="fas fa-user-plus me-2"></i>Aggiungi Nuovo Utente
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card stats-card stat-totale shadow-sm">
                <div class="card-body text-center">
                    <div class="stat-label">Totale Utenti</div>
                    <div class="stat-value">@Model.Count()</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card stats-card stat-giochi shadow-sm">
                <div class="card-body text-center">
                    <div class="stat-label">Giochi Unici</div>
                    <div class="stat-value">@Model.Select(u => u.Game).Distinct().Count()</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card stats-card stat-piattaforme shadow-sm">
                <div class="card-body text-center">
                    <div class="stat-label">Piattaforme</div>
                    <div class="stat-value">@Model.Select(u => u.Piattaforma).Distinct().Count()</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card stats-card stat-media shadow-sm">
                <div class="card-body text-center">
                    <div class="stat-label">Media Posizione</div>
                    <div class="stat-value">@(Model.Any() ? Math.Round(Model.Average(u => u.Positioning), 1) : 0)</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filters -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body filters-card">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">Cerca utente</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-search"></i></span>
                                <input type="text" class="form-control" id="searchInput" placeholder="Nome utente...">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Filtra per gioco</label>
                            <select class="form-select" id="gameFilter">
                                <option value="">Tutti i giochi</option>
                                @foreach (var game in Model.Select(u => u.Game).Distinct().OrderBy(g => g))
                                {
                                    <option value="@game">@game</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Filtra per piattaforma</label>
                            <select class="form-select" id="platformFilter">
                                <option value="">Tutte le piattaforme</option>
                                @foreach (var platform in Model.Select(u => u.Piattaforma).Distinct().OrderBy(p => p))
                                {
                                    <option value="@platform">@platform</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">&nbsp;</label>
                            <button class="btn btn-outline-light w-100" onclick="clearFilters()">
                                <i class="fas fa-times me-1"></i>Reset
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm users-card">
                <div class="card-header">
                    <h5 class="card-title mb-0 text-white">
                        <i class="fas fa-list me-2"></i>Elenco Utenti
                        <span class="badge bg-primary ms-2" id="userCount">@Model.Count()</span>
                    </h5>
                </div>
                <div class="card-body p-0">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0 text-white" id="usersTable">
                                <thead>
                                    <tr>
                                        <th scope="col" class="py-3">
                                            <i class="fas fa-user me-2"></i>
                                            @Html.DisplayNameFor(model => model.UserName)
                                        </th>
                                        <th scope="col" class="py-3">
                                            <i class="fas fa-gamepad me-2"></i>
                                            @Html.DisplayNameFor(model => model.Game)
                                        </th>
                                        <th scope="col" class="py-3">
                                            <i class="fas fa-desktop me-2"></i>
                                            @Html.DisplayNameFor(model => model.Piattaforma)
                                        </th>
                                        <th scope="col" class="py-3 text-center">
                                            <i class="fas fa-trophy me-2"></i>
                                            @Html.DisplayNameFor(model => model.Positioning)
                                        </th>
                                        <th scope="col" class="py-3">
                                            <i class="fas fa-calendar me-2"></i>
                                            @Html.DisplayNameFor(model => model.Date)
                                        </th>
                                        <th scope="col" class="py-3 text-center">Azioni</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.OrderBy(u => u.UserName))
                                    {
                                        <tr class="user-row">
                                            <td class="py-3">
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-circle me-3">
                                                        @item.UserName.Substring(0, 1).ToUpper()
                                                    </div>
                                                    <strong class="text-primary user-name">@Html.DisplayFor(modelItem => item.UserName)</strong>
                                                </div>
                                            </td>
                                            <td class="py-3">
                                                <span class="badge bg-info text-white px-3 py-2 game-name">
                                                    @Html.DisplayFor(modelItem => item.Game)
                                                </span>
                                            </td>
                                            <td class="py-3">
                                                <span class="badge bg-secondary text-white px-3 py-2 platform-name">
                                                    @Html.DisplayFor(modelItem => item.Piattaforma)
                                                </span>
                                            </td>
                                            <td class="py-3 text-center">
                                                @{
                                                    var positionClass = item.Positioning <= 3 ? "text-warning" :
                                                    item.Positioning <= 10 ? "text-info" : "text-muted";
                                                    var positionIcon = item.Positioning == 1 ? "fas fa-crown" :
                                                    item.Positioning <= 3 ? "fas fa-medal" :
                                                    "fas fa-hashtag";
                                                }
                                                <span class="@positionClass fw-bold">
                                                    <i class="@positionIcon me-1"></i>
                                                    @Html.DisplayFor(modelItem => item.Positioning)°
                                                </span>
                                            </td>
                                            <td class="py-3">
                                                <small class="text-muted">
                                                    <i class="fas fa-clock me-1"></i>
                                                    @Html.DisplayFor(modelItem => item.Date)
                                                </small>
                                            </td>
                                            <td class="py-3 text-center">
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@item.Id"
                                                       class="btn btn-outline-info btn-sm"
                                                       data-bs-toggle="tooltip" title="Visualizza dettagli">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@item.Id"
                                                       class="btn btn-outline-warning btn-sm"
                                                       data-bs-toggle="tooltip" title="Modifica">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@item.Id"
                                                       class="btn btn-outline-danger btn-sm"
                                                       data-bs-toggle="tooltip" title="Elimina"
                                                       onclick="return confirm('Sei sicuro di voler eliminare questo utente?')">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-users fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Nessun utente trovato</h5>
                            <p class="text-muted">Inizia aggiungendo il tuo primo utente!</p>
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="fas fa-user-plus me-2"></i>Aggiungi Primo Utente
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <style>

    /* --- Statistiche --- */
    .stats-card {
        background: rgba(0,0,0,0.7);
        border-radius: 15px;
        border: 1px solid rgba(255,255,255,0.1);
        padding: 1rem;
    }

        .stats-card .stat-label {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85rem;
        }

        .stats-card .stat-value {
            font-size: 1.4rem;
            font-weight: bold;
        }

        .stats-card.stat-totale .stat-label,
        .stats-card.stat-totale .stat-value {
            color: #0d6efd; /* blu */
        }

        .stats-card.stat-giochi .stat-label,
        .stats-card.stat-giochi .stat-value {
            color: #198754; /* verde */
        }

        .stats-card.stat-piattaforme .stat-label,
        .stats-card.stat-piattaforme .stat-value {
            color: #0dcaf0; /* azzurro */
        }

        .stats-card.stat-media .stat-label,
        .stats-card.stat-media .stat-value {
            color: #ffc107; /* giallo */
        }
        
    /* --- Filtri --- */
    .filters-card {
        padding: 1.5rem;
        background: rgba(0, 0, 0, 0.7);
        border-top: 1px solid rgba(255,255,255,0.1);
        border-radius: 0 0 15px 15px;
        color: #fff;
    }

    .filters-card .form-label {
        color: #fff !important;
        font-weight: 500;
        text-shadow: none;
    }

    .filters-card .form-control,
    .filters-card .form-select {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255,255,255,0.2);
        color: #fff;
    }

        .filters-card .form-control::placeholder {
            color: rgba(255,255,255,0.6);
        }

        .filters-card .form-select option {
            background: #222;
            color: #fff;
        }

    .filters-card .btn-outline-light {
        border: 1px solid rgba(255,255,255,0.5);
        color: #fff;
    }

        .filters-card .btn-outline-light:hover {
            background: rgba(255,255,255,0.2);
            color: #fff;
        }

    /* --- Elenco Utenti --- */
    .users-card {
        background: rgba(0, 0, 0, 0.7);
        border-radius: 15px;
        border: 1px solid rgba(255,255,255,0.1);
    }

    .users-card .card-header {
        background: transparent;
        border-bottom: 1px solid rgba(255,255,255,0.1);
    }

    .users-card table {
        color: #fff;
        background: transparent;
    }

    .users-card thead {
        background: rgba(255,255,255,0.1);
    }

    .users-card tbody tr:hover {
        background: rgba(255,255,255,0.1);
    }
    </style>

    <script>
        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        // Search and filter functionality
        function filterUsers() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const gameFilter = document.getElementById('gameFilter').value.toLowerCase();
            const platformFilter = document.getElementById('platformFilter').value.toLowerCase();

            const rows = document.querySelectorAll('.user-row');
            let visibleCount = 0;

            rows.forEach(row => {
                const userName = row.querySelector('.user-name').textContent.toLowerCase();
                const gameName = row.querySelector('.game-name').textContent.toLowerCase();
                const platformName = row.querySelector('.platform-name').textContent.toLowerCase();

                const matchesSearch = userName.includes(searchTerm);
                const matchesGame = !gameFilter || gameName.includes(gameFilter);
                const matchesPlatform = !platformFilter || platformName.includes(platformFilter);

                if (matchesSearch && matchesGame && matchesPlatform) {
                    row.style.display = '';
                    row.classList.remove('fade-out');
                    visibleCount++;
                } else {
                    row.classList.add('fade-out');
                    setTimeout(() => {
                        if (row.classList.contains('fade-out')) {
                            row.style.display = 'none';
                        }
                    }, 150);
                }
            });

            document.getElementById('userCount').textContent = visibleCount;
        }

        function clearFilters() {
            document.getElementById('searchInput').value = '';
            document.getElementById('gameFilter').value = '';
            document.getElementById('platformFilter').value = '';
            filterUsers();
        }

        // Add event listeners
        document.getElementById('searchInput').addEventListener('input', filterUsers);
        document.getElementById('gameFilter').addEventListener('change', filterUsers);
        document.getElementById('platformFilter').addEventListener('change', filterUsers);
    </script>
